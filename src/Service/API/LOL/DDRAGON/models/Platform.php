<?phpnamespace App\Service\API\LOL\DDRAGON\models;use App\Service\API\LOL\DDRAGON\Exceptions\ContinentException;class Platform{    /**     * Standard Region     */    const BRASIL            = 'br1';    const EUROPE_EAST       = 'eun1';    const EUROPE_WEST       = 'euw1';    const KOREA             = 'kr';    const JAPAN             = 'jp1';    const LAMERICA_NORTH    = 'la1';    const LAMERICA_SOUTH    = 'la2';    const NORTH_AMERICA     = 'na1';    const OCEANIA           = 'oc1';    const RUSSIA            = 'ru';    const TURKEY            = 'tr1';    const AMERICAS = 'americas';    const ASIA = 'asia';    const EUROPE = 'europe';    public static $list = [        Region::BRASIL			=> self::BRASIL,        Region::EUROPE_EAST 	=> self::EUROPE_EAST,        Region::EUROPE_WEST 	=> self::EUROPE_WEST,        Region::KOREA 			=> self::KOREA,        Region::JAPAN 			=> self::JAPAN,        Region::LAMERICA_NORTH  => self::LAMERICA_NORTH,        Region::LAMERICA_SOUTH  => self::LAMERICA_SOUTH,        Region::NORTH_AMERICA 	=> self::NORTH_AMERICA,        Region::OCEANIA 		=> self::OCEANIA,        Region::RUSSIA 			=> self::RUSSIA,        Region::TURKEY 			=> self::TURKEY,    ];	/**	 * Continents	 */    public const CONTINENT_REGION = [        self::AMERICAS,        self::ASIA,        self::EUROPE    ];	/**	 * @return array|string[]	 */    public function getList(): array	{		return $this::$list;	}	/**	 * @return array|string[]	 */	public function getListContinent(): array	{		return self::CONTINENT_REGION;	}	/**	 * @param string $continent	 * @return string	 * @throws ContinentException	 */    public function getContinentsName(string $continent): string    {        $continent = strtolower($continent);        if(isset(self::CONTINENT_REGION[$continent])) {            throw new ContinentException("Invalid continent. Can not find requested continent");        }        return self::CONTINENT_REGION[$continent];    }}